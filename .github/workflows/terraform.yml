name: 'Terraform'

# 定義工作流程觸發條件
# 當推送到 main 分支時，或者有 pull request 時觸發
on:
  push:
    branches:
      - main
    paths:
      - 'bigquery/views/*.sql'  # 只監控 bigquery/views 目錄下的所有 .sql 檔案的變更
      - '.github/workflows/terraform.yml'  # 監控 workflow 檔案自身的變更
  pull_request:

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest  # 指定使用 Ubuntu 環境運行這個工作
    environment: production  # 指定運行環境名稱

    defaults:
      run:
        shell: bash  # 強制使用 Bash shell 來運行所有命令，無論運行器是什麼操作系統

    steps:
      # 步驟1: 檢出程式碼
      # 這一步將程式碼檢出到 GitHub Actions 的運行器中，以便後續步驟可以訪問程式碼
      - name: Checkout
        uses: actions/checkout@v2

      # 步驟2: 安裝最新版本的 Terraform CLI
      # 使用 hashicorp 提供的動作來設置 Terraform 環境
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      # 步驟3: 初始化 Terraform 工作目錄
      # 這將創建初始檔案、加載任何遠端狀態、下載模塊等，準備 Terraform 環境
      - name: Terraform Init
        run: terraform init
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}  # 從 GitHub Secrets 中獲取 Google Cloud 資格憑證

      # 步驟4: 格式化檢查
      # 確保所有 Terraform 配置檔符合規範格式
      - name: Terraform Format
        run: terraform fmt -check

      # 步驟5: 使用 git diff 檢查這次提交中變更的 .sql 檔案
      - name: Get list of changed SQL files
        id: changed-files
        run: |
          # 獲取當前分支和 main 分支的共同祖先提交
          BASE_COMMIT=$(git merge-base HEAD main)
          
          # 使用 git diff 比較共同祖先和當前提交之間的變更
          CHANGED_FILES=$(git diff --name-only $BASE_COMMIT HEAD -- bigquery/views/*.sql)

          if [ -z "$CHANGED_FILES" ]; then
            echo "No SQL files changed."
            echo "FILES_CHANGED=false" >> $GITHUB_ENV
          else
            echo "SQL files changed: $CHANGED_FILES"
            echo "FILES_CHANGED=true" >> $GITHUB_ENV
          fi
      
      - name: Terraform Plan if any .sql files changed
        if: env.FILES_CHANGED == 'true'
        run: terraform plan
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}

      - name: Terraform Apply if any .sql files changed
        if: env.FILES_CHANGED == 'true' && github.ref == 'refs/heads/main'
        run: terraform apply -auto-approve
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}